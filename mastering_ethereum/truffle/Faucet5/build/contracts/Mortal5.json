{
  "contractName": "Mortal5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Navascues\",\"details\":\"Inherits from Owned5 and implements contract destruction\",\"methods\":{\"destroy()\":{\"details\":\"In case `owner` was not payable, call `payable(owner)`\"}},\"title\":\"Mastering Ethereum Chapter 6, Faucet contract v5\"},\"userdoc\":{\"methods\":{},\"notice\":\"Faucet4 applying contract inheritance, error handling, events, and NatSpec documentation\"}},\"settings\":{\"compilationTarget\":{\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol\":\"Mortal5\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol\":{\"keccak256\":\"0x5e28db83cd8ad072cca8631a2c623d5874b85d669c336d05c14aae4bf9e2ca71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3189369b1fc0b4cc315c99ff6c1dc5d11f452cc9df2dcd48db51825cb785aa0f\",\"dweb:/ipfs/QmeztGuNgmpC6GmPSpDucs3sSY7fLNsZtgj81hbmCXfpwZ\"]},\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Owned5.sol\":{\"keccak256\":\"0xa399941705cefd92ebef59ce1486300ac205d6a1834112fe455eebf4204da626\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f99bb24845ba60ef9c538063092cfd93047d0eda43167647510f18fd0e2c45\",\"dweb:/ipfs/QmZAx2nBFVCABb3mWUPGj8KpvjcxREFhzZDqQ9Nw1EHjgL\"]}},\"version\":1}",
  "bytecode": "0x608060405230600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061017d806100a16000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061011a602e913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffe4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c20746869732066756e6374696f6ea26469706673582212207a573820ec603a62eb542d3906c23a93f9698e35d743b100c1db9f924b9a3b4f64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061011a602e913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffe4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c20746869732066756e6374696f6ea26469706673582212207a573820ec603a62eb542d3906c23a93f9698e35d743b100c1db9f924b9a3b4f64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "344:887:2:-:0;;;660:4:3;623:42;;;;;;;;;;;;;;;;;;;;344:887:2;;;;;;;;;;711:10:3;703:5;;:18;;;;;;;;;;;;;;;;;;344:887:2;;;;;;",
  "deployedSourceMap": "344:887:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:72;;;:::i;:::-;;;922:5:3;;;;;;;;;;;908:19;;:10;:19;;;887:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1216:5:2::1;::::0;::::1;;;;;;;;;1203:19;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./Owned5.sol\";\n\n/**\n * @title Mastering Ethereum Chapter 6, Faucet contract v5\n * @author Victor Navascues\n * @notice Faucet4 applying contract inheritance, error handling, events, and\n * NatSpec documentation\n * @dev Inherits from Owned5 and implements contract destruction\n */\ncontract Mortal5 is Owned5 {\n    // BEWARE: NatSpec comments are not available yet for events\n    /**\n     * @notice This event is emitted when a withdrawal occurs\n     * @dev The keyword `indexed` makes the value searchable and filterable\n     * @param to the address that requests the withdrawal\n     * @param amount the requested ether amount\n     */\n    event Withdrawal(address indexed to, uint256 amount);\n    /**\n     * @notice This event is emitted when a diposit occurs\n     * @dev The keyword `indexed` makes the value searchable and filterable\n     * @param from the address that requests the deposit\n     * @param amount the requested ether amount\n     */\n    event Deposit(address indexed from, uint256 amount);\n\n    /**\n     * @dev In case `owner` was not payable, call `payable(owner)`\n     */\n    function destroy() public onlyOwner {\n        selfdestruct(owner);\n    }\n}\n",
  "sourcePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol",
  "ast": {
    "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol",
    "exportedSymbols": {
      "Mortal5": [
        122
      ]
    },
    "id": 123,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 92,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Owned5.sol",
        "file": "./Owned5.sol",
        "id": 93,
        "nodeType": "ImportDirective",
        "scope": 123,
        "sourceUnit": 159,
        "src": "57:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 95,
              "name": "Owned5",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 158,
              "src": "364:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned5_$158",
                "typeString": "contract Owned5"
              }
            },
            "id": 96,
            "nodeType": "InheritanceSpecifier",
            "src": "364:6:2"
          }
        ],
        "contractDependencies": [
          158
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 94,
          "nodeType": "StructuredDocumentation",
          "src": "81:262:2",
          "text": " @title Mastering Ethereum Chapter 6, Faucet contract v5\n @author Victor Navascues\n @notice Faucet4 applying contract inheritance, error handling, events, and\n NatSpec documentation\n @dev Inherits from Owned5 and implements contract destruction"
        },
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122,
          158
        ],
        "name": "Mortal5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 97,
              "nodeType": "StructuredDocumentation",
              "src": "442:255:2",
              "text": " @notice This event is emitted when a withdrawal occurs\n @dev The keyword `indexed` makes the value searchable and filterable\n @param to the address that requests the withdrawal\n @param amount the requested ether amount"
            },
            "id": 103,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "719:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "739:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:36:2"
            },
            "src": "702:53:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "760:251:2",
              "text": " @notice This event is emitted when a diposit occurs\n @dev The keyword `indexed` makes the value searchable and filterable\n @param from the address that requests the deposit\n @param amount the requested ether amount"
            },
            "id": 110,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1030:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1052:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1029:38:2"
            },
            "src": "1016:52:2"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1193:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1216:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 116,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1203:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:19:2"
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "1074:78:2",
              "text": " @dev In case `owner` was not payable, call `payable(owner)`"
            },
            "functionSelector": "83197ef0",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 114,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 113,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 157,
                  "src": "1183:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1183:9:2"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:2:2"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:2"
            },
            "scope": 122,
            "src": "1157:72:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 123,
        "src": "344:887:2"
      }
    ],
    "src": "32:1200:2"
  },
  "legacyAST": {
    "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol",
    "exportedSymbols": {
      "Mortal5": [
        122
      ]
    },
    "id": 123,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 92,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Owned5.sol",
        "file": "./Owned5.sol",
        "id": 93,
        "nodeType": "ImportDirective",
        "scope": 123,
        "sourceUnit": 159,
        "src": "57:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 95,
              "name": "Owned5",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 158,
              "src": "364:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned5_$158",
                "typeString": "contract Owned5"
              }
            },
            "id": 96,
            "nodeType": "InheritanceSpecifier",
            "src": "364:6:2"
          }
        ],
        "contractDependencies": [
          158
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 94,
          "nodeType": "StructuredDocumentation",
          "src": "81:262:2",
          "text": " @title Mastering Ethereum Chapter 6, Faucet contract v5\n @author Victor Navascues\n @notice Faucet4 applying contract inheritance, error handling, events, and\n NatSpec documentation\n @dev Inherits from Owned5 and implements contract destruction"
        },
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122,
          158
        ],
        "name": "Mortal5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 97,
              "nodeType": "StructuredDocumentation",
              "src": "442:255:2",
              "text": " @notice This event is emitted when a withdrawal occurs\n @dev The keyword `indexed` makes the value searchable and filterable\n @param to the address that requests the withdrawal\n @param amount the requested ether amount"
            },
            "id": 103,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "719:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 103,
                  "src": "739:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:36:2"
            },
            "src": "702:53:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "760:251:2",
              "text": " @notice This event is emitted when a diposit occurs\n @dev The keyword `indexed` makes the value searchable and filterable\n @param from the address that requests the deposit\n @param amount the requested ether amount"
            },
            "id": 110,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1030:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1052:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1029:38:2"
            },
            "src": "1016:52:2"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1193:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1216:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 116,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1203:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:19:2"
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "1074:78:2",
              "text": " @dev In case `owner` was not payable, call `payable(owner)`"
            },
            "functionSelector": "83197ef0",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 114,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 113,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 157,
                  "src": "1183:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1183:9:2"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:2:2"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:2"
            },
            "scope": 122,
            "src": "1157:72:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 123,
        "src": "344:887:2"
      }
    ],
    "src": "32:1200:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-18T15:06:33.664Z",
  "devdoc": {
    "author": "Victor Navascues",
    "details": "Inherits from Owned5 and implements contract destruction",
    "methods": {
      "destroy()": {
        "details": "In case `owner` was not payable, call `payable(owner)`"
      }
    },
    "title": "Mastering Ethereum Chapter 6, Faucet contract v5"
  },
  "userdoc": {
    "methods": {},
    "notice": "Faucet4 applying contract inheritance, error handling, events, and NatSpec documentation"
  }
}