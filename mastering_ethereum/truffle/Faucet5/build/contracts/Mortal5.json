{
  "contractName": "Mortal5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Navascues.\",\"details\":\"Inherits from Owned5 and implements contract destruction.\",\"methods\":{\"destroy()\":{\"details\":\"In case `owner` was not payable, call `payable(owner)`.\"}},\"title\":\"Mastering Ethereum Chapter 6, Faucet contract v5.\"},\"userdoc\":{\"methods\":{},\"notice\":\"Faucet4 applying contract inheritance, error handling, events, and NatSpec documentation.\"}},\"settings\":{\"compilationTarget\":{\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol\":\"Mortal5\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol\":{\"keccak256\":\"0x2e034b5d19eed4adb3eee861112fbdbe002cc68a91c89c11123a2755ce5390ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e16cb57b6c28a13a1f9ea1474e8134ae7f5977f540a22eaddca98277230ac09f\",\"dweb:/ipfs/Qmf4AtMFTKywHXja5zi3xZ4YhLrb9zAbmtcisxp1VgAQBm\"]},\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Owned5.sol\":{\"keccak256\":\"0x6f99c06541f92df6fd7fe424e04546bf73eaa5de2cc88be4cde697bda93360c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e915106030efa0cec5d2d8cebaa720295756f8103e6486997fc72ac2a9b62b13\",\"dweb:/ipfs/QmPHzveSuaKxxtKMx5GEkfbaRUbN2H81GNQpj9Z2SMq2U4\"]}},\"version\":1}",
  "bytecode": "0x608060405230600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061017d806100a16000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061011a602e913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffe4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c20746869732066756e6374696f6ea2646970667358221220f31fb102cab48ae867b2c99a2a8e61a006b6657feb9c4f94a4404edcd9b9784f64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061011a602e913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffe4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c20746869732066756e6374696f6ea2646970667358221220f31fb102cab48ae867b2c99a2a8e61a006b6657feb9c4f94a4404edcd9b9784f64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "362:897:2:-:0;;;666:4:3;629:42;;;;;;;;;;;;;;;;;;;;362:897:2;;;;;;;;;;717:10:3;709:5;;:18;;;;;;;;;;;;;;;;;;362:897:2;;;;;;",
  "deployedSourceMap": "362:897:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1185:72;;;:::i;:::-;;;929:5:3;;;;;;;;;;;915:19;;:10;:19;;;894:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:5:2::1;::::0;::::1;;;;;;;;;1231:19;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport {Owned5} from \"./Owned5.sol\";\n\n/**\n * @title Mastering Ethereum Chapter 6, Faucet contract v5.\n * @author Victor Navascues.\n * @notice Faucet4 applying contract inheritance, error handling, events, and\n * NatSpec documentation.\n * @dev Inherits from Owned5 and implements contract destruction.\n */\ncontract Mortal5 is Owned5 {\n    // BEWARE: NatSpec comments are not available yet for events.\n    /**\n     * @notice This event is emitted when a withdrawal occurs.\n     * @dev The keyword `indexed` makes the value searchable and filterable.\n     * @param to the address that requests the withdrawal.\n     * @param amount the requested ether amount.\n     */\n    event Withdrawal(address indexed to, uint256 amount);\n    /**\n     * @notice This event is emitted when a diposit occurs.\n     * @dev The keyword `indexed` makes the value searchable and filterable.\n     * @param from the address that requests the deposit.\n     * @param amount the requested ether amount.\n     */\n    event Deposit(address indexed from, uint256 amount);\n\n    /**\n     * @dev In case `owner` was not payable, call `payable(owner)`.\n     */\n    function destroy() public onlyOwner {\n        selfdestruct(owner);\n    }\n}\n",
  "sourcePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol",
  "ast": {
    "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol",
    "exportedSymbols": {
      "Mortal5": [
        124
      ]
    },
    "id": 125,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 93,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Owned5.sol",
        "file": "./Owned5.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 161,
        "src": "57:36:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 94,
              "name": "Owned5",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "65:6:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 97,
              "name": "Owned5",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 160,
              "src": "382:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned5_$160",
                "typeString": "contract Owned5"
              }
            },
            "id": 98,
            "nodeType": "InheritanceSpecifier",
            "src": "382:6:2"
          }
        ],
        "contractDependencies": [
          160
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 96,
          "nodeType": "StructuredDocumentation",
          "src": "95:266:2",
          "text": " @title Mastering Ethereum Chapter 6, Faucet contract v5.\n @author Victor Navascues.\n @notice Faucet4 applying contract inheritance, error handling, events, and\n NatSpec documentation.\n @dev Inherits from Owned5 and implements contract destruction."
        },
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124,
          160
        ],
        "name": "Mortal5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 99,
              "nodeType": "StructuredDocumentation",
              "src": "461:259:2",
              "text": " @notice This event is emitted when a withdrawal occurs.\n @dev The keyword `indexed` makes the value searchable and filterable.\n @param to the address that requests the withdrawal.\n @param amount the requested ether amount."
            },
            "id": 105,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "742:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "762:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:36:2"
            },
            "src": "725:53:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 106,
              "nodeType": "StructuredDocumentation",
              "src": "783:255:2",
              "text": " @notice This event is emitted when a diposit occurs.\n @dev The keyword `indexed` makes the value searchable and filterable.\n @param from the address that requests the deposit.\n @param amount the requested ether amount."
            },
            "id": 112,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 112,
                  "src": "1057:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 112,
                  "src": "1079:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:38:2"
            },
            "src": "1043:52:2"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1221:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1244:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 118,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1231:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1231:19:2"
                }
              ]
            },
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "1101:79:2",
              "text": " @dev In case `owner` was not payable, call `payable(owner)`."
            },
            "functionSelector": "83197ef0",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 115,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 159,
                  "src": "1211:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1211:9:2"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:2:2"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:0:2"
            },
            "scope": 124,
            "src": "1185:72:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 125,
        "src": "362:897:2"
      }
    ],
    "src": "32:1228:2"
  },
  "legacyAST": {
    "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Mortal5.sol",
    "exportedSymbols": {
      "Mortal5": [
        124
      ]
    },
    "id": 125,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 93,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/Faucet5/contracts/Owned5.sol",
        "file": "./Owned5.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 161,
        "src": "57:36:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 94,
              "name": "Owned5",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "65:6:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 97,
              "name": "Owned5",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 160,
              "src": "382:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned5_$160",
                "typeString": "contract Owned5"
              }
            },
            "id": 98,
            "nodeType": "InheritanceSpecifier",
            "src": "382:6:2"
          }
        ],
        "contractDependencies": [
          160
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 96,
          "nodeType": "StructuredDocumentation",
          "src": "95:266:2",
          "text": " @title Mastering Ethereum Chapter 6, Faucet contract v5.\n @author Victor Navascues.\n @notice Faucet4 applying contract inheritance, error handling, events, and\n NatSpec documentation.\n @dev Inherits from Owned5 and implements contract destruction."
        },
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124,
          160
        ],
        "name": "Mortal5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 99,
              "nodeType": "StructuredDocumentation",
              "src": "461:259:2",
              "text": " @notice This event is emitted when a withdrawal occurs.\n @dev The keyword `indexed` makes the value searchable and filterable.\n @param to the address that requests the withdrawal.\n @param amount the requested ether amount."
            },
            "id": 105,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "742:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "762:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:36:2"
            },
            "src": "725:53:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 106,
              "nodeType": "StructuredDocumentation",
              "src": "783:255:2",
              "text": " @notice This event is emitted when a diposit occurs.\n @dev The keyword `indexed` makes the value searchable and filterable.\n @param from the address that requests the deposit.\n @param amount the requested ether amount."
            },
            "id": 112,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 112,
                  "src": "1057:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 112,
                  "src": "1079:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:38:2"
            },
            "src": "1043:52:2"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1221:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1244:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 118,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1231:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1231:19:2"
                }
              ]
            },
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "1101:79:2",
              "text": " @dev In case `owner` was not payable, call `payable(owner)`."
            },
            "functionSelector": "83197ef0",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 115,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 159,
                  "src": "1211:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1211:9:2"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:2:2"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:0:2"
            },
            "scope": 124,
            "src": "1185:72:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 125,
        "src": "362:897:2"
      }
    ],
    "src": "32:1228:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-29T14:23:22.611Z",
  "devdoc": {
    "author": "Victor Navascues.",
    "details": "Inherits from Owned5 and implements contract destruction.",
    "methods": {
      "destroy()": {
        "details": "In case `owner` was not payable, call `payable(owner)`."
      }
    },
    "title": "Mastering Ethereum Chapter 6, Faucet contract v5."
  },
  "userdoc": {
    "methods": {},
    "notice": "Faucet4 applying contract inheritance, error handling, events, and NatSpec documentation."
  }
}