{
  "contractName": "Owned",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"author\":\"Victor Navascues.\",\"details\":\"Base contract that sets the contract ownership in the state.\",\"methods\":{},\"stateVariables\":{\"myAddress\":{\"details\":\"contract address, the keyword keyword `internal` for inheritance.\"},\"owner\":{\"details\":\"The keyword `payable` is optional (it can be casted later on via `payable(owner)`, and `internal` for inheritance.\"}},\"title\":\"Mastering Ethereum Chapter 6, Faucet contract v5.\"},\"userdoc\":{\"methods\":{},\"notice\":\"Faucet4 applying contract inheritance, error handling, events, and NatSpec documentation.\"}},\"settings\":{\"compilationTarget\":{\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/SCSecurity/contracts/reentrancy_attack/Owned.sol\":\"Owned\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/SCSecurity/contracts/reentrancy_attack/Owned.sol\":{\"keccak256\":\"0x9a7e331874b4496a02fc38fd2ed05fd316f075ca5468e77624d2e027137070bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0374168012c29faefa390ddce44c6c3d35ae0177e0267ca3630045362095510d\",\"dweb:/ipfs/QmS1qNVA5LxnSN5oK7ZqYcYx2trhza3vPyeyiiSs9zQ3w5\"]}},\"version\":1}",
  "bytecode": "0x608060405230600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015605057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80609e6000396000f3fe6080604052600080fdfea2646970667358221220a82866e02c30d2fb6ed4eaec94d32891e0807fc29ef970819b82d3d3aa91670d64736f6c634300060a0033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220a82866e02c30d2fb6ed4eaec94d32891e0807fc29ef970819b82d3d3aa91670d64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "327:698:5:-:0;;;665:4;628:42;;;;;;;;;;;;;;;;;;;;677:56;;;;;;;;;;716:10;708:5;;:18;;;;;;;;;;;;;;;;;;327:698;;;;;;",
  "deployedSourceMap": "327:698:5:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @title Mastering Ethereum Chapter 6, Faucet contract v5.\n * @author Victor Navascues.\n * @notice Faucet4 applying contract inheritance, error handling, events, and\n * NatSpec documentation.\n * @dev Base contract that sets the contract ownership in the state.\n */\ncontract Owned {\n    /**\n     * @dev The keyword `payable` is optional (it can be casted later on via\n     * `payable(owner)`, and `internal` for inheritance.\n     */\n    address payable internal owner;\n    /**\n     * @dev contract address, the keyword keyword `internal` for inheritance.\n     */\n    address internal myAddress = address(this);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Access control modifier that checks the message address against the\n     * contract creator one.\n     */\n    modifier onlyOwner {\n        require(\n            msg.sender == owner,\n            \"Only the contract owner can call this function\"\n        );\n        _;\n    }\n}\n",
  "sourcePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/SCSecurity/contracts/reentrancy_attack/Owned.sol",
  "ast": {
    "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/SCSecurity/contracts/reentrancy_attack/Owned.sol",
    "exportedSymbols": {
      "Owned": [
        444
      ]
    },
    "id": 445,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 410,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 411,
          "nodeType": "StructuredDocumentation",
          "src": "57:269:5",
          "text": " @title Mastering Ethereum Chapter 6, Faucet contract v5.\n @author Victor Navascues.\n @notice Faucet4 applying contract inheritance, error handling, events, and\n NatSpec documentation.\n @dev Base contract that sets the contract ownership in the state."
        },
        "fullyImplemented": true,
        "id": 444,
        "linearizedBaseContracts": [
          444
        ],
        "name": "Owned",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 412,
              "nodeType": "StructuredDocumentation",
              "src": "348:145:5",
              "text": " @dev The keyword `payable` is optional (it can be casted later on via\n `payable(owner)`, and `internal` for inheritance."
            },
            "id": 414,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 444,
            "src": "498:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 413,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "498:15:5",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "534:89:5",
              "text": " @dev contract address, the keyword keyword `internal` for inheritance."
            },
            "id": 421,
            "mutability": "mutable",
            "name": "myAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 444,
            "src": "628:42:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 416,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "628:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 419,
                  "name": "this",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -28,
                  "src": "665:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Owned_$444",
                    "typeString": "contract Owned"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_contract$_Owned_$444",
                    "typeString": "contract Owned"
                  }
                ],
                "id": 418,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "657:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 417,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 420,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "657:13:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "698:35:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "708:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "716:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "716:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "708:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "708:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 430,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:2:5"
            },
            "returnParameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:0:5"
            },
            "scope": 444,
            "src": "677:56:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "883:140:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 434,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "914:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "914:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 436,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "928:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "914:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "947:48:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
                          "typeString": "literal_string \"Only the contract owner can call this function\""
                        },
                        "value": "Only the contract owner can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
                          "typeString": "literal_string \"Only the contract owner can call this function\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "893:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:112:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "893:112:5"
                },
                {
                  "id": 441,
                  "nodeType": "PlaceholderStatement",
                  "src": "1015:1:5"
                }
              ]
            },
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "739:120:5",
              "text": " @dev Access control modifier that checks the message address against the\n contract creator one."
            },
            "id": 443,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:0:5"
            },
            "src": "864:159:5",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 445,
        "src": "327:698:5"
      }
    ],
    "src": "32:994:5"
  },
  "legacyAST": {
    "absolutePath": "/home/victor/Projects/ethereum/solidity_playground/mastering_ethereum/truffle/SCSecurity/contracts/reentrancy_attack/Owned.sol",
    "exportedSymbols": {
      "Owned": [
        444
      ]
    },
    "id": 445,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 410,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 411,
          "nodeType": "StructuredDocumentation",
          "src": "57:269:5",
          "text": " @title Mastering Ethereum Chapter 6, Faucet contract v5.\n @author Victor Navascues.\n @notice Faucet4 applying contract inheritance, error handling, events, and\n NatSpec documentation.\n @dev Base contract that sets the contract ownership in the state."
        },
        "fullyImplemented": true,
        "id": 444,
        "linearizedBaseContracts": [
          444
        ],
        "name": "Owned",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 412,
              "nodeType": "StructuredDocumentation",
              "src": "348:145:5",
              "text": " @dev The keyword `payable` is optional (it can be casted later on via\n `payable(owner)`, and `internal` for inheritance."
            },
            "id": 414,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 444,
            "src": "498:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 413,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "498:15:5",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "534:89:5",
              "text": " @dev contract address, the keyword keyword `internal` for inheritance."
            },
            "id": 421,
            "mutability": "mutable",
            "name": "myAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 444,
            "src": "628:42:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 416,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "628:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 419,
                  "name": "this",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -28,
                  "src": "665:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Owned_$444",
                    "typeString": "contract Owned"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_contract$_Owned_$444",
                    "typeString": "contract Owned"
                  }
                ],
                "id": 418,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "657:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 417,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 420,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "657:13:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "698:35:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "708:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "716:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "716:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "708:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "708:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 430,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:2:5"
            },
            "returnParameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:0:5"
            },
            "scope": 444,
            "src": "677:56:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "883:140:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 434,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "914:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "914:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 436,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "928:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "914:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "947:48:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
                          "typeString": "literal_string \"Only the contract owner can call this function\""
                        },
                        "value": "Only the contract owner can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
                          "typeString": "literal_string \"Only the contract owner can call this function\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "893:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:112:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "893:112:5"
                },
                {
                  "id": 441,
                  "nodeType": "PlaceholderStatement",
                  "src": "1015:1:5"
                }
              ]
            },
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "739:120:5",
              "text": " @dev Access control modifier that checks the message address against the\n contract creator one."
            },
            "id": 443,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:0:5"
            },
            "src": "864:159:5",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 445,
        "src": "327:698:5"
      }
    ],
    "src": "32:994:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xb1015F65A62CEdEC7E7B03ea85322f7D04F48B05",
      "transactionHash": "0x964fbee10dd228fac7a7e302f247577b825b9e4714ea4dc12a947becf84bb5e0"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-07-06T17:12:56.179Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Victor Navascues.",
    "details": "Base contract that sets the contract ownership in the state.",
    "methods": {},
    "stateVariables": {
      "myAddress": {
        "details": "contract address, the keyword keyword `internal` for inheritance."
      },
      "owner": {
        "details": "The keyword `payable` is optional (it can be casted later on via `payable(owner)`, and `internal` for inheritance."
      }
    },
    "title": "Mastering Ethereum Chapter 6, Faucet contract v5."
  },
  "userdoc": {
    "methods": {},
    "notice": "Faucet4 applying contract inheritance, error handling, events, and NatSpec documentation."
  }
}